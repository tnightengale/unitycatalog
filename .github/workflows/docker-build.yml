name: Build and Push Docker Images

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  pull_request:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        image:
          - context: .
            name: ${{ github.repository }} # unitycatalog/unitycatalog
          - context: ./ui
            name: ${{ github.repository }}-ui # unitycatalog/unitycatalog-ui

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Apply metadata and tags
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ matrix.image.name }}

      # TODO: Agree on a strategy for publishing to DockerHub
      # - name: Login to Docker Hub
      #   uses: docker/login-action@v3
      #   with:
      #     username: ${{ vars.DOCKERHUB_USERNAME }}
      #     password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: ${{ matrix.image.context }}
          # Push only tagged releases to registry.
          # Eg. the git ref "refs/tags/v0.2.0" would result
          # in the tagged image "unitycatalog/unitycatalog:v0.2.0".
          # See here for details: https://tinyurl.com/yh8252m2
          push: ${{ github.event_name == 'push' && contains(github.ref, 'refs/tags/') }}
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          # Use registry caching: https://tinyurl.com/4b8mfexr
          cache-from: type=registry,ref=${{ matrix.image.name }}:buildcache
          cache-to: type=registry,ref=${{ matrix.image.name }}:buildcache,mode=max
